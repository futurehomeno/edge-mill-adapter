{
  "configs":[
    {
      "id": "poll_time_min",
      "label": {"en": "Poll time in minutes"},
      "val_t": "string",
      "ui": {
        "type": "input_string"
      },
      "val": {
        "default": ""
      },
      "config_point": "any"
    }
  ],
  "ui_buttons": [
    {
      "id":"sync",
      "label": {"en": "sync"},
      "req": {
        "serv":"mill",
        "intf_t": "cmd.system.sync",
        "val": ""
      },
      "hidden": false
    }
  ],
  "ui_blocks": [
    {
      "id":"sync",
      "header": {"en": "Synchronize with Mill app"},
      "text": {"en": "The app will find and include all devices connected to your Mill user. You need to be logged in before synchronizing."},
      "configs": [],  
      "buttons": ["sync"],
      "footer": {"en": ""}
    },
    {
      "id":"poll_time_min",
      "header": {"en": "Poll Time"},
      "text": {"en": "Set how often you want futurehome to get temperature reports from Mill in minutes."},
      "configs": ["poll_time_min"],
      "buttons": [],
      "footer": {"en": "Click save to save new poll time. After changing this value you need to stop and start the Mill app in playgrounds."},
      "hidden": false
    }
  ],
  "auth": {
      "type": "password",
      "code_grant_login_page_url":"",
      "redirect_url": "",
      "client_id": "",
      "secret":"",
      "partner_id": "",
      "auth_endpoint": ""
  },
  "init_flow":["auth", "connect"],
  "services": [
    {
      "name": "mill",
      "alias": "Network managment",
      "address": "/rt:ad/rn:mill/ad:1",
      "interfaces": [
        {
          "intf_t": "in",
          "msg_t": "cmd.auth.set_tokens",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.auth.status_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.network.get_all_nodes",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.network.all_nodes_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.app.get_manifest",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.app.manifest_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.app.get_state",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.app.manifest_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.config.get_extended_reoprt",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.config.extended_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.config.extended_set",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "evt.app.config_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.log.set_level",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.reconnect",
          "val_t": "null",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.app.config_action_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.app.factory_reset",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "cmd.app.config_action_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.get_inclusion_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.inclusion_report",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.inclusion",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.thing.delete",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.auth.login",
          "val_t": "object",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "cmd.hub_auth.get_jwt",
          "val_t": "str_map",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.auth.logout",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "out",
          "msg_t": "evt.thing.exclusion_report",
          "val_t": "string",
          "ver": "1"
        },
        {
          "intf_t": "in",
          "msg_t": "cmd.system.sync",
          "val_t": "string",
          "ver": "1"
        }
      ]
    }
  ],
  "app_state": {

  }
}